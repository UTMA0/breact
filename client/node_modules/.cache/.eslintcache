[{"C:\\Users\\BARDO\\Desktop\\youtube-transcript-project\\client\\src\\index.js":"1","C:\\Users\\BARDO\\Desktop\\youtube-transcript-project\\client\\src\\App.js":"2"},{"size":251,"mtime":1724093143914,"results":"3","hashOfConfig":"4"},{"size":1555,"mtime":1724091990657,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rz7z0u",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\BARDO\\Desktop\\youtube-transcript-project\\client\\src\\index.js",[],"C:\\Users\\BARDO\\Desktop\\youtube-transcript-project\\client\\src\\App.js",["11","12"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [transcript, setTranscript] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setTranscript('');\r\n\r\n    try {\r\n      const videoId = extractVideoId(videoUrl);\r\n      if (!videoId) {\r\n        throw new Error('Invalid YouTube URL');\r\n      }\r\n\r\n      const response = await axios.post('http://localhost:5000/api/transcript', { videoId });\r\n      setTranscript(response.data.transcript.join('\\n'));\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const extractVideoId = (url) => {\r\n    const regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\r\n    const match = url.match(regex);\r\n    return match ? match[1] : null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>YouTube Transcript Downloader</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={videoUrl}\r\n          onChange={(e) => setVideoUrl(e.target.value)}\r\n          placeholder=\"Enter YouTube video URL\"\r\n        />\r\n        <button type=\"submit\">Get Transcript</button>\r\n      </form>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {transcript && (\r\n        <div>\r\n          <h2>Transcript:</h2>\r\n          <pre>{transcript}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;",{"ruleId":"13","severity":1,"message":"14","line":28,"column":42,"nodeType":"15","messageId":"16","endLine":28,"endColumn":43,"suggestions":"17"},{"ruleId":"13","severity":1,"message":"14","line":28,"column":100,"nodeType":"15","messageId":"16","endLine":28,"endColumn":101,"suggestions":"18"},"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["19","20"],["21","22"],{"messageId":"23","fix":"24","desc":"25"},{"messageId":"26","fix":"27","desc":"28"},{"messageId":"23","fix":"29","desc":"25"},{"messageId":"26","fix":"30","desc":"28"},"removeEscape",{"range":"31","text":"32"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"33","text":"34"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"35","text":"32"},{"range":"36","text":"34"},[791,792],"",[791,791],"\\",[849,850],[849,849]]